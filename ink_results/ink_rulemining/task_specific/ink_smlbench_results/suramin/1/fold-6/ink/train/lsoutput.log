filename__workdir
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-6/ink/train
filename__pos
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-6/ink/train/pos.txt
filename__neg
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-6/ink/train/neg.txt
filename__output
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-6/ink/train/train.out
learningtask
suramin
learningproblem
1
step
train
maxExecutionTime
900
DEBUG: starting script
  0%|          | 0/16 [00:00<?, ?it/s]  6%|▋         | 1/16 [00:00<00:01,  9.74it/s] 19%|█▉        | 3/16 [00:00<00:01, 12.31it/s] 31%|███▏      | 5/16 [00:00<00:00, 12.89it/s] 44%|████▍     | 7/16 [00:00<00:00, 11.04it/s] 56%|█████▋    | 9/16 [00:00<00:00, 11.16it/s] 75%|███████▌  | 12/16 [00:00<00:00, 14.41it/s] 88%|████████▊ | 14/16 [00:01<00:00, 14.89it/s]100%|██████████| 16/16 [00:01<00:00, 13.61it/s]100%|██████████| 16/16 [00:01<00:00, 13.06it/s]
  0%|          | 0/16 [00:00<?, ?it/s]100%|██████████| 16/16 [00:00<00:00, 504.34it/s]
  0%|          | 0/16 [00:00<?, ?it/s]100%|██████████| 16/16 [00:00<00:00, 4176.81it/s]
  0%|          | 0/16 [00:00<?, ?it/s]100%|██████████| 16/16 [00:00<00:00, 166.25it/s]
  0%|          | 0/16 [00:00<?, ?it/s]100%|██████████| 16/16 [00:00<00:00, 150.91it/s]100%|██████████| 16/16 [00:00<00:00, 150.68it/s]
  0%|          | 0/10526 [00:00<?, ?it/s]  3%|▎         | 368/10526 [00:00<00:02, 3665.09it/s]  7%|▋         | 735/10526 [00:00<00:02, 3429.57it/s] 10%|█         | 1079/10526 [00:00<00:02, 3300.85it/s] 14%|█▍        | 1458/10526 [00:00<00:02, 3481.37it/s] 18%|█▊        | 1852/10526 [00:00<00:02, 3638.86it/s] 22%|██▏       | 2301/10526 [00:00<00:02, 3919.40it/s] 26%|██▌       | 2749/10526 [00:00<00:01, 4097.82it/s] 30%|███       | 3195/10526 [00:00<00:01, 4211.43it/s] 35%|███▍      | 3642/10526 [00:00<00:01, 4289.43it/s] 39%|███▉      | 4091/10526 [00:01<00:01, 4349.16it/s] 43%|████▎     | 4540/10526 [00:01<00:01, 4389.92it/s] 47%|████▋     | 4980/10526 [00:01<00:01, 4151.13it/s] 51%|█████▏    | 5398/10526 [00:01<00:01, 3728.05it/s] 55%|█████▍    | 5780/10526 [00:01<00:01, 3532.17it/s] 59%|█████▉    | 6210/10526 [00:01<00:01, 3737.02it/s] 63%|██████▎   | 6655/10526 [00:01<00:00, 3933.72it/s] 67%|██████▋   | 7103/10526 [00:01<00:00, 4086.39it/s] 71%|███████▏  | 7518/10526 [00:01<00:00, 3709.64it/s] 75%|███████▌  | 7932/10526 [00:02<00:00, 3825.88it/s] 80%|███████▉  | 8380/10526 [00:02<00:00, 4006.27it/s] 84%|████████▍ | 8828/10526 [00:02<00:00, 4140.59it/s] 88%|████████▊ | 9271/10526 [00:02<00:00, 4222.00it/s] 92%|█████████▏| 9719/10526 [00:02<00:00, 4297.04it/s] 97%|█████████▋| 10168/10526 [00:02<00:00, 4351.45it/s]100%|██████████| 10526/10526 [00:02<00:00, 4012.08it/s]
0it [00:00, ?it/s]10526it [00:00, 1923211.53it/s]
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [00:01<00:06,  1.72s/it] 40%|████      | 2/5 [00:03<00:05,  1.77s/it] 60%|██████    | 3/5 [00:05<00:03,  2.00s/it] 80%|████████  | 4/5 [00:07<00:01,  1.99s/it]100%|██████████| 5/5 [00:09<00:00,  1.97s/it]100%|██████████| 5/5 [00:09<00:00,  1.94s/it]
/users/bsteenwi/.local/lib/python3.8/site-packages/numpy/core/_asarray.py:102: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return array(a, dtype, copy=False, order=order)
  0%|          | 0/1000 [00:00<?, ?it/s]  0%|          | 1/1000 [00:00<08:54,  1.87it/s]  2%|▎         | 25/1000 [00:00<00:20, 46.58it/s]  4%|▍         | 41/1000 [00:00<00:15, 63.21it/s]  6%|▌         | 57/1000 [00:01<00:12, 74.99it/s]  7%|▋         | 73/1000 [00:01<00:11, 83.44it/s]  9%|▉         | 89/1000 [00:01<00:10, 89.20it/s] 10%|█         | 105/1000 [00:01<00:09, 93.01it/s] 12%|█▏        | 121/1000 [00:01<00:09, 95.86it/s] 14%|█▎        | 137/1000 [00:01<00:08, 97.82it/s] 15%|█▌        | 153/1000 [00:02<00:09, 85.98it/s] 17%|█▋        | 169/1000 [00:02<00:09, 88.88it/s] 19%|█▉        | 193/1000 [00:02<00:08, 93.77it/s] 21%|██        | 209/1000 [00:02<00:08, 95.88it/s] 22%|██▎       | 225/1000 [00:02<00:07, 98.95it/s] 25%|██▍       | 249/1000 [00:02<00:06, 115.35it/s] 26%|██▋       | 265/1000 [00:03<00:06, 113.63it/s] 28%|██▊       | 281/1000 [00:03<00:06, 107.63it/s] 30%|██▉       | 297/1000 [00:03<00:06, 108.19it/s] 31%|███▏      | 313/1000 [00:03<00:06, 108.25it/s] 33%|███▎      | 329/1000 [00:03<00:06, 108.13it/s] 34%|███▍      | 345/1000 [00:03<00:06, 107.84it/s] 36%|███▌      | 361/1000 [00:04<00:06, 94.27it/s]  38%|███▊      | 385/1000 [00:04<00:05, 112.46it/s] 40%|████      | 401/1000 [00:04<00:05, 110.93it/s] 42%|████▏     | 417/1000 [00:04<00:05, 109.95it/s] 43%|████▎     | 433/1000 [00:04<00:05, 109.33it/s] 45%|████▍     | 449/1000 [00:04<00:05, 109.10it/s] 46%|████▋     | 465/1000 [00:04<00:04, 108.91it/s] 48%|████▊     | 481/1000 [00:05<00:04, 108.48it/s] 50%|████▉     | 497/1000 [00:05<00:04, 108.19it/s] 51%|█████▏    | 513/1000 [00:05<00:04, 108.10it/s] 53%|█████▎    | 529/1000 [00:05<00:04, 107.64it/s] 55%|█████▍    | 545/1000 [00:05<00:04, 107.90it/s] 56%|█████▌    | 561/1000 [00:05<00:04, 108.12it/s] 58%|█████▊    | 577/1000 [00:05<00:03, 108.27it/s] 59%|█████▉    | 593/1000 [00:06<00:03, 108.06it/s] 61%|██████    | 609/1000 [00:06<00:03, 108.27it/s] 62%|██████▎   | 625/1000 [00:06<00:03, 108.58it/s] 64%|██████▍   | 641/1000 [00:06<00:03, 108.69it/s] 66%|██████▌   | 657/1000 [00:06<00:03, 108.66it/s] 67%|██████▋   | 673/1000 [00:06<00:03, 107.87it/s] 69%|██████▉   | 689/1000 [00:06<00:02, 107.72it/s] 70%|███████   | 705/1000 [00:07<00:02, 107.49it/s] 72%|███████▏  | 721/1000 [00:07<00:02, 106.79it/s] 74%|███████▎  | 737/1000 [00:07<00:02, 106.04it/s] 75%|███████▍  | 748/1000 [00:07<00:02, 95.96it/s]  76%|███████▌  | 761/1000 [00:07<00:02, 93.01it/s] 78%|███████▊  | 777/1000 [00:07<00:02, 97.07it/s] 79%|███████▉  | 793/1000 [00:08<00:02, 99.12it/s] 81%|████████  | 809/1000 [00:08<00:02, 86.10it/s] 84%|████████▍ | 841/1000 [00:08<00:01, 105.46it/s] 86%|████████▌ | 857/1000 [00:08<00:01, 104.83it/s] 88%|████████▊ | 881/1000 [00:08<00:01, 105.17it/s] 90%|████████▉ | 897/1000 [00:09<00:00, 105.64it/s] 91%|█████████▏| 913/1000 [00:09<00:00, 105.81it/s] 93%|█████████▎| 929/1000 [00:09<00:00, 105.86it/s] 95%|█████████▌| 953/1000 [00:09<00:00, 120.79it/s] 97%|█████████▋| 969/1000 [00:09<00:00, 111.69it/s] 98%|█████████▊| 985/1000 [00:09<00:00, 112.16it/s]100%|██████████| 1000/1000 [00:09<00:00, 101.83it/s]
../../learningtasks/suramin/owl/data/*.hdt
#Process: get neighbourhood
# Transform
## create counts
## create levels
Create classification forests
Chaining
[http://dl-learner.org/suramin#hasAtom.http://dl-learner.org/suramin#charge<=-0.622]
