filename__workdir
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-4/ink/train
filename__pos
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-4/ink/train/pos.txt
filename__neg
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-4/ink/train/neg.txt
filename__output
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/suramin/1/fold-4/ink/train/train.out
learningtask
suramin
learningproblem
1
step
train
maxExecutionTime
900
DEBUG: starting script
  0%|          | 0/15 [00:00<?, ?it/s] 13%|█▎        | 2/15 [00:00<00:00, 16.31it/s] 33%|███▎      | 5/15 [00:00<00:00, 19.02it/s] 47%|████▋     | 7/15 [00:00<00:00, 16.41it/s] 60%|██████    | 9/15 [00:00<00:00, 15.04it/s] 73%|███████▎  | 11/15 [00:00<00:00, 12.63it/s] 87%|████████▋ | 13/15 [00:00<00:00, 13.01it/s]100%|██████████| 15/15 [00:01<00:00, 13.23it/s]100%|██████████| 15/15 [00:01<00:00, 14.07it/s]
  0%|          | 0/15 [00:00<?, ?it/s]100%|██████████| 15/15 [00:00<00:00, 535.07it/s]
  0%|          | 0/15 [00:00<?, ?it/s]100%|██████████| 15/15 [00:00<00:00, 4251.27it/s]
  0%|          | 0/15 [00:00<?, ?it/s]100%|██████████| 15/15 [00:00<00:00, 200.40it/s]
  0%|          | 0/15 [00:00<?, ?it/s]100%|██████████| 15/15 [00:00<00:00, 158.81it/s]
  0%|          | 0/9290 [00:00<?, ?it/s]  4%|▍         | 355/9290 [00:00<00:02, 3546.16it/s]  8%|▊         | 710/9290 [00:00<00:02, 3281.15it/s] 11%|█         | 1040/9290 [00:00<00:02, 3279.95it/s] 15%|█▌        | 1401/9290 [00:00<00:02, 3404.66it/s] 20%|█▉        | 1825/9290 [00:00<00:02, 3699.61it/s] 24%|██▍       | 2264/9290 [00:00<00:01, 3929.24it/s] 29%|██▉       | 2703/9290 [00:00<00:01, 4076.15it/s] 34%|███▍      | 3143/9290 [00:00<00:01, 4176.17it/s] 39%|███▊      | 3583/9290 [00:00<00:01, 4243.66it/s] 43%|████▎     | 4022/9290 [00:01<00:01, 4287.86it/s] 48%|████▊     | 4452/9290 [00:01<00:01, 4004.20it/s] 52%|█████▏    | 4857/9290 [00:01<00:01, 3584.17it/s] 56%|█████▋    | 5226/9290 [00:01<00:01, 3597.47it/s] 61%|██████    | 5663/9290 [00:01<00:00, 3810.97it/s] 66%|██████▌   | 6103/9290 [00:01<00:00, 3976.24it/s] 70%|███████   | 6507/9290 [00:01<00:00, 3786.69it/s] 74%|███████▍  | 6892/9290 [00:01<00:00, 3736.04it/s] 79%|███████▉  | 7332/9290 [00:01<00:00, 3921.60it/s] 84%|████████▎ | 7773/9290 [00:02<00:00, 4059.77it/s] 88%|████████▊ | 8208/9290 [00:02<00:00, 4142.77it/s] 93%|█████████▎| 8649/9290 [00:02<00:00, 4218.38it/s] 98%|█████████▊| 9090/9290 [00:02<00:00, 4273.80it/s]100%|██████████| 9290/9290 [00:02<00:00, 3944.07it/s]
0it [00:00, ?it/s]9290it [00:00, 2316730.14it/s]
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [00:01<00:06,  1.69s/it] 40%|████      | 2/5 [00:03<00:05,  1.76s/it] 60%|██████    | 3/5 [00:05<00:03,  1.96s/it] 80%|████████  | 4/5 [00:07<00:01,  1.96s/it]100%|██████████| 5/5 [00:09<00:00,  1.93s/it]100%|██████████| 5/5 [00:09<00:00,  1.91s/it]
/users/bsteenwi/.local/lib/python3.8/site-packages/numpy/core/_asarray.py:102: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return array(a, dtype, copy=False, order=order)
  0%|          | 0/1000 [00:00<?, ?it/s]  0%|          | 1/1000 [00:00<06:03,  2.75it/s]  2%|▏         | 17/1000 [00:00<00:23, 41.55it/s]  3%|▎         | 33/1000 [00:00<00:17, 55.03it/s]  6%|▌         | 57/1000 [00:00<00:10, 86.46it/s]  7%|▋         | 73/1000 [00:01<00:09, 93.43it/s]  9%|▉         | 89/1000 [00:01<00:09, 93.52it/s] 11%|█▏        | 113/1000 [00:01<00:07, 113.55it/s] 13%|█▎        | 126/1000 [00:01<00:08, 106.67it/s] 14%|█▍        | 138/1000 [00:01<00:08, 99.16it/s]  15%|█▌        | 153/1000 [00:01<00:08, 99.81it/s] 17%|█▋        | 169/1000 [00:02<00:10, 82.49it/s] 20%|██        | 201/1000 [00:02<00:08, 92.47it/s] 22%|██▏       | 217/1000 [00:02<00:08, 96.31it/s] 23%|██▎       | 233/1000 [00:02<00:07, 98.59it/s] 25%|██▍       | 249/1000 [00:02<00:08, 89.29it/s] 26%|██▋       | 265/1000 [00:03<00:07, 93.36it/s] 28%|██▊       | 281/1000 [00:03<00:07, 96.65it/s] 30%|██▉       | 297/1000 [00:03<00:07, 99.34it/s] 31%|███▏      | 313/1000 [00:03<00:06, 101.56it/s] 33%|███▎      | 329/1000 [00:03<00:06, 102.82it/s] 34%|███▍      | 345/1000 [00:03<00:06, 104.02it/s] 36%|███▌      | 361/1000 [00:03<00:06, 104.90it/s] 38%|███▊      | 377/1000 [00:04<00:05, 105.28it/s] 39%|███▉      | 393/1000 [00:04<00:05, 105.24it/s] 41%|████      | 409/1000 [00:04<00:06, 91.98it/s]  43%|████▎     | 433/1000 [00:04<00:05, 109.95it/s] 45%|████▍     | 449/1000 [00:04<00:05, 108.70it/s] 46%|████▋     | 465/1000 [00:04<00:04, 108.44it/s] 48%|████▊     | 481/1000 [00:05<00:04, 108.55it/s] 50%|█████     | 505/1000 [00:05<00:03, 124.75it/s] 52%|█████▏    | 521/1000 [00:05<00:03, 121.00it/s] 54%|█████▎    | 537/1000 [00:05<00:03, 118.04it/s] 55%|█████▌    | 553/1000 [00:05<00:03, 116.32it/s] 57%|█████▋    | 569/1000 [00:05<00:03, 115.56it/s] 58%|█████▊    | 585/1000 [00:05<00:03, 114.75it/s] 60%|██████    | 601/1000 [00:06<00:03, 114.14it/s] 61%|██████▏   | 613/1000 [00:06<00:04, 89.81it/s]  64%|██████▍   | 641/1000 [00:06<00:03, 119.28it/s] 66%|██████▌   | 657/1000 [00:06<00:02, 117.27it/s] 67%|██████▋   | 673/1000 [00:06<00:02, 115.93it/s] 69%|██████▉   | 689/1000 [00:06<00:02, 114.65it/s] 70%|███████   | 705/1000 [00:07<00:02, 108.30it/s] 73%|███████▎  | 729/1000 [00:07<00:02, 125.23it/s] 74%|███████▍  | 742/1000 [00:07<00:02, 114.34it/s] 75%|███████▌  | 754/1000 [00:07<00:02, 90.69it/s]  77%|███████▋  | 769/1000 [00:07<00:02, 93.56it/s] 78%|███████▊  | 785/1000 [00:07<00:02, 97.81it/s] 80%|████████  | 801/1000 [00:07<00:01, 100.35it/s] 82%|████████▏ | 817/1000 [00:08<00:01, 97.50it/s]  84%|████████▍ | 841/1000 [00:08<00:01, 116.02it/s] 85%|████████▌ | 853/1000 [00:08<00:01, 105.84it/s] 86%|████████▋ | 865/1000 [00:08<00:01, 97.93it/s]  88%|████████▊ | 881/1000 [00:08<00:01, 100.34it/s] 90%|████████▉ | 897/1000 [00:08<00:01, 102.19it/s] 91%|█████████▏| 913/1000 [00:09<00:00, 103.34it/s] 94%|█████████▎| 937/1000 [00:09<00:00, 105.32it/s] 95%|█████████▌| 953/1000 [00:09<00:00, 106.38it/s] 98%|█████████▊| 977/1000 [00:09<00:00, 117.51it/s] 99%|█████████▉| 993/1000 [00:09<00:00, 108.94it/s]100%|██████████| 1000/1000 [00:09<00:00, 102.48it/s]
../../learningtasks/suramin/owl/data/*.hdt
#Process: get neighbourhood
# Transform
## create counts
## create levels
Create classification forests
Chaining
[http://dl-learner.org/suramin#hasAtom.http://dl-learner.org/suramin#charge<=-0.61]
