filename__workdir
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/mammographic/1/fold-2/ink/train
filename__pos
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/mammographic/1/fold-2/ink/train/pos.txt
filename__neg
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/mammographic/1/fold-2/ink/train/neg.txt
filename__output
/users/bsteenwi/SML-Bench-0.3-2022/sml-temp5170403953494312326/mammographic/1/fold-2/ink/train/train.out
learningtask
mammographic
learningproblem
1
step
train
maxExecutionTime
900
DEBUG: starting script
  0%|          | 0/865 [00:00<?, ?it/s]  7%|▋         | 58/865 [00:00<00:01, 572.12it/s] 14%|█▎        | 117/865 [00:00<00:01, 579.43it/s] 20%|██        | 176/865 [00:00<00:01, 584.00it/s] 27%|██▋       | 235/865 [00:00<00:01, 584.25it/s] 34%|███▍      | 294/865 [00:00<00:00, 585.78it/s] 41%|████      | 353/865 [00:00<00:00, 582.40it/s] 48%|████▊     | 412/865 [00:00<00:00, 578.40it/s] 54%|█████▍    | 471/865 [00:00<00:00, 581.04it/s] 61%|██████▏   | 530/865 [00:00<00:00, 581.82it/s] 68%|██████▊   | 589/865 [00:01<00:00, 583.35it/s] 75%|███████▍  | 648/865 [00:01<00:00, 584.11it/s] 82%|████████▏ | 708/865 [00:01<00:00, 586.62it/s] 89%|████████▊ | 767/865 [00:01<00:00, 585.76it/s] 95%|█████████▌| 826/865 [00:01<00:00, 585.81it/s]100%|██████████| 865/865 [00:01<00:00, 583.92it/s]
  0%|          | 0/865 [00:00<?, ?it/s]100%|██████████| 865/865 [00:00<00:00, 33440.62it/s]
  0%|          | 0/865 [00:00<?, ?it/s]100%|██████████| 865/865 [00:00<00:00, 16579.49it/s]
  0%|          | 0/865 [00:00<?, ?it/s] 33%|███▎      | 287/865 [00:00<00:00, 2864.60it/s] 66%|██████▋   | 574/865 [00:00<00:00, 2838.11it/s] 99%|█████████▉| 858/865 [00:00<00:00, 2838.36it/s]100%|██████████| 865/865 [00:00<00:00, 2839.15it/s]
  0%|          | 0/865 [00:00<?, ?it/s] 19%|█▉        | 164/865 [00:00<00:00, 1633.27it/s] 38%|███▊      | 328/865 [00:00<00:00, 1627.80it/s] 57%|█████▋    | 494/865 [00:00<00:00, 1638.69it/s] 76%|███████▌  | 658/865 [00:00<00:00, 1628.12it/s] 95%|█████████▍| 821/865 [00:00<00:00, 1626.49it/s]100%|██████████| 865/865 [00:00<00:00, 1628.68it/s]
  0%|          | 0/449 [00:00<?, ?it/s] 54%|█████▍    | 242/449 [00:00<00:00, 2412.02it/s]100%|██████████| 449/449 [00:00<00:00, 2516.23it/s]
0it [00:00, ?it/s]449it [00:00, 1881361.13it/s]
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [00:01<00:07,  1.86s/it] 40%|████      | 2/5 [00:04<00:06,  2.26s/it] 60%|██████    | 3/5 [00:07<00:05,  2.53s/it] 80%|████████  | 4/5 [00:12<00:03,  3.66s/it]100%|██████████| 5/5 [00:21<00:00,  5.60s/it]100%|██████████| 5/5 [00:21<00:00,  4.34s/it]
/users/bsteenwi/.local/lib/python3.8/site-packages/numpy/core/_asarray.py:102: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return array(a, dtype, copy=False, order=order)
  0%|          | 0/1000 [00:00<?, ?it/s]  0%|          | 1/1000 [00:08<2:24:35,  8.68s/it]  1%|          | 9/1000 [00:09<12:20,  1.34it/s]    2%|▏         | 17/1000 [00:09<05:38,  2.90it/s]  2%|▎         | 25/1000 [00:09<03:29,  4.66it/s]  3%|▎         | 33/1000 [00:10<02:17,  7.03it/s]  4%|▍         | 41/1000 [00:10<01:43,  9.26it/s]  5%|▍         | 49/1000 [00:11<01:45,  8.98it/s]  6%|▌         | 57/1000 [00:12<01:42,  9.23it/s]  6%|▋         | 65/1000 [00:12<01:18, 11.88it/s]  7%|▋         | 73/1000 [00:12<01:02, 14.87it/s]  8%|▊         | 81/1000 [00:13<01:11, 12.79it/s]  9%|▉         | 89/1000 [00:13<00:57, 15.82it/s] 11%|█▏        | 113/1000 [00:14<00:34, 25.76it/s] 14%|█▎        | 137/1000 [00:14<00:26, 32.30it/s] 15%|█▌        | 153/1000 [00:14<00:21, 38.67it/s] 16%|█▌        | 161/1000 [00:15<00:22, 37.89it/s] 17%|█▋        | 169/1000 [00:15<00:27, 30.53it/s] 18%|█▊        | 185/1000 [00:15<00:21, 38.71it/s] 20%|██        | 201/1000 [00:16<00:25, 31.41it/s] 22%|██▏       | 217/1000 [00:17<00:27, 28.14it/s] 23%|██▎       | 233/1000 [00:18<00:30, 25.19it/s] 24%|██▍       | 241/1000 [00:18<00:29, 25.88it/s] 25%|██▍       | 249/1000 [00:18<00:27, 27.11it/s] 26%|██▌       | 257/1000 [00:19<00:33, 22.09it/s] 26%|██▋       | 265/1000 [00:19<00:40, 17.95it/s] 27%|██▋       | 273/1000 [00:20<00:35, 20.59it/s] 29%|██▉       | 289/1000 [00:20<00:36, 19.49it/s] 30%|██▉       | 297/1000 [00:21<00:38, 18.33it/s] 30%|███       | 305/1000 [00:21<00:37, 18.73it/s] 31%|███▏      | 313/1000 [00:23<00:52, 13.05it/s] 32%|███▏      | 321/1000 [00:23<00:48, 14.05it/s] 33%|███▎      | 329/1000 [00:23<00:39, 16.93it/s] 34%|███▎      | 337/1000 [00:23<00:34, 19.25it/s] 34%|███▍      | 345/1000 [00:24<00:32, 19.87it/s] 35%|███▌      | 353/1000 [00:24<00:38, 16.81it/s] 36%|███▌      | 361/1000 [00:25<00:35, 18.21it/s] 37%|███▋      | 369/1000 [00:25<00:36, 17.52it/s] 38%|███▊      | 377/1000 [00:26<00:30, 20.44it/s] 39%|███▉      | 393/1000 [00:26<00:28, 21.41it/s] 40%|████      | 401/1000 [00:27<00:25, 23.23it/s] 41%|████      | 409/1000 [00:27<00:23, 25.11it/s] 42%|████▎     | 425/1000 [00:27<00:16, 35.10it/s] 43%|████▎     | 433/1000 [00:27<00:16, 35.41it/s] 44%|████▍     | 441/1000 [00:27<00:15, 35.71it/s] 45%|████▍     | 449/1000 [00:28<00:15, 35.17it/s] 46%|████▌     | 457/1000 [00:28<00:19, 27.28it/s] 46%|████▋     | 465/1000 [00:28<00:18, 28.76it/s] 47%|████▋     | 473/1000 [00:29<00:15, 33.78it/s] 48%|████▊     | 481/1000 [00:29<00:14, 34.87it/s] 49%|████▉     | 489/1000 [00:29<00:16, 31.65it/s] 50%|████▉     | 497/1000 [00:30<00:34, 14.67it/s] 50%|█████     | 505/1000 [00:31<00:28, 17.61it/s] 51%|█████▏    | 513/1000 [00:31<00:30, 16.16it/s] 52%|█████▏    | 521/1000 [00:32<00:28, 16.76it/s] 53%|█████▎    | 529/1000 [00:32<00:24, 19.35it/s] 54%|█████▎    | 537/1000 [00:33<00:28, 16.02it/s] 55%|█████▍    | 545/1000 [00:33<00:26, 16.86it/s] 55%|█████▌    | 553/1000 [00:33<00:22, 20.02it/s] 57%|█████▋    | 569/1000 [00:34<00:19, 21.66it/s] 58%|█████▊    | 577/1000 [00:34<00:17, 24.81it/s] 58%|█████▊    | 585/1000 [00:35<00:22, 18.14it/s] 59%|█████▉    | 593/1000 [00:35<00:20, 20.06it/s] 61%|██████    | 609/1000 [00:35<00:13, 29.02it/s] 62%|██████▏   | 617/1000 [00:36<00:13, 29.32it/s] 65%|██████▍   | 649/1000 [00:36<00:09, 37.75it/s] 66%|██████▌   | 657/1000 [00:37<00:11, 30.15it/s] 66%|██████▋   | 665/1000 [00:37<00:10, 30.95it/s] 67%|██████▋   | 673/1000 [00:37<00:10, 30.45it/s] 68%|██████▊   | 681/1000 [00:39<00:21, 15.03it/s] 69%|██████▉   | 689/1000 [00:39<00:17, 17.46it/s] 70%|███████   | 705/1000 [00:39<00:11, 24.67it/s] 71%|███████▏  | 713/1000 [00:40<00:15, 18.27it/s] 72%|███████▏  | 721/1000 [00:40<00:13, 20.47it/s] 73%|███████▎  | 729/1000 [00:40<00:11, 22.60it/s] 74%|███████▎  | 737/1000 [00:41<00:10, 24.86it/s] 74%|███████▍  | 745/1000 [00:41<00:09, 26.60it/s] 75%|███████▌  | 753/1000 [00:43<00:25,  9.57it/s] 76%|███████▌  | 761/1000 [00:44<00:20, 11.40it/s] 77%|███████▋  | 769/1000 [00:44<00:16, 13.59it/s] 78%|███████▊  | 777/1000 [00:44<00:14, 15.37it/s] 78%|███████▊  | 785/1000 [00:44<00:11, 18.55it/s] 80%|████████  | 801/1000 [00:45<00:06, 29.85it/s] 81%|████████  | 809/1000 [00:45<00:06, 29.04it/s] 82%|████████▏ | 817/1000 [00:46<00:11, 16.06it/s] 82%|████████▎ | 825/1000 [00:46<00:09, 18.23it/s] 85%|████████▍ | 849/1000 [00:46<00:04, 35.53it/s] 86%|████████▌ | 858/1000 [00:47<00:03, 35.81it/s] 86%|████████▋ | 865/1000 [00:47<00:04, 31.83it/s] 87%|████████▋ | 873/1000 [00:47<00:04, 28.37it/s] 89%|████████▉ | 889/1000 [00:48<00:04, 25.54it/s] 90%|█████████ | 905/1000 [00:48<00:03, 29.87it/s] 92%|█████████▏| 921/1000 [00:49<00:02, 37.09it/s] 94%|█████████▎| 937/1000 [00:49<00:01, 40.57it/s] 94%|█████████▍| 945/1000 [00:50<00:01, 29.85it/s] 96%|█████████▌| 961/1000 [00:50<00:01, 33.06it/s] 97%|█████████▋| 969/1000 [00:50<00:00, 36.97it/s] 98%|█████████▊| 977/1000 [00:50<00:00, 33.16it/s] 98%|█████████▊| 985/1000 [00:51<00:00, 33.08it/s] 99%|█████████▉| 993/1000 [00:51<00:00, 22.91it/s]100%|██████████| 1000/1000 [00:51<00:00, 19.31it/s]
../../learningtasks/mammographic/owl/data/*.hdt
#Process: get neighbourhood
# Transform
## create counts
## create levels
Create classification forests
Chaining
[http://dl-learner.org/mammographic#hasBiRads>=5.0]
